Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>gradle_version=8.7\r\nvendor=GH\r\nversion=0.0.1\r\n\r\norg.gradle.warning.mode=all
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
--- a/gradle.properties	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/gradle.properties	(date 1729282787749)
@@ -1,4 +1,4 @@
-gradle_version=8.7
+gradle_version=8.10.2
 vendor=GH
 version=0.0.1
 
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def current_version = version\r\n\r\next {\r\n    log4j2_version = \"2.20.0\"\r\n \tjunit_version = '5.9.2'\r\n \tguava_version = '31.1-jre'\r\n \tbouncy_castle_version = '1.77'\r\n}\r\n\r\nallprojects {\r\n}\r\n\r\nimport java.text.SimpleDateFormat\r\nimport org.gradle.internal.jvm.Jvm\r\n\r\ndef static buildTime() {\r\n\tdef df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm\") \r\n\tdf.setTimeZone(TimeZone.getTimeZone(\"UTC\"))\r\n\treturn df.format(new Date())\r\n}\r\n\r\ndef currentBuildJvm = Jvm.current()\r\ndef currentBuildTime = buildTime()\r\n\r\nwrapper {\r\n\tgradleVersion = gradle_version\r\n}\r\n\r\nsubprojects {\r\n\tapply plugin: 'jacoco'\r\n\tapply plugin: 'eclipse'\r\n    apply plugin: 'java'\r\n    apply plugin: 'idea'\r\n\r\n\trepositories {\r\n        mavenCentral()\r\n    }\r\n\r\n\tdependencies {\r\n        testImplementation \"org.junit.jupiter:junit-jupiter:${junit_version}\"\r\n        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'\r\n        implementation \"org.apache.logging.log4j:log4j-api:${log4j2_version}\"\r\n        implementation \"org.apache.logging.log4j:log4j-core:${log4j2_version}\"\r\n        implementation \"com.google.guava:guava:${guava_version}\"\r\n    }\r\n\r\n    java {\r\n        toolchain {\r\n            languageVersion = JavaLanguageVersion.of(17)\r\n        }\r\n        withSourcesJar()\r\n    }\r\n\r\n\ttasks.named('jar') {\r\n\t\tmanifest {\r\n\t\t\tattributes \"Built-By\" : \"$System.env.USERNAME\",\r\n\t\t\t\t\t   \"Built-With\" : \"Java ${-> currentBuildJvm}\",\r\n\t\t\t\t\t   \"Gradle-Version\" : \"${-> gradle.gradleVersion}\",\r\n\t\t\t\t       \"Specification-Title\" : \"${-> project.name.toUpperCase()}\",\r\n\t\t\t\t       \"Specification-Vendor\" : \"${-> vendor}\",\r\n\t\t\t\t       \"Specification-Version\" : \"${-> archiveVersion}\",\r\n\t\t\t\t       \"Implementation-Title\" :\t\"${-> project.name}\",\r\n\t\t\t\t       \"Implementation-Vendor\" : \"${-> vendor}\",\r\n\t\t\t\t       \"Implementation-Version\" : \"${-> archiveVersion}\"\r\n        }\r\n    }\r\n\t\r\n\tjavadoc {\r\n\t\tdef tagList = [\"remarks:a:Remarks:\",\r\n\t\t\t\t\t   \"example:a:Example Code:\", \r\n\t\t\t\t\t   \"format:a:Format:\", \r\n\t\t\t\t\t   \"guidance:a:Recommended Reaction:\"] \r\n\r\n\t\tfailOnError = false\r\n\t\ttitle=\"${project.name}, ${version} <br>API Specification\"\r\n\t\toptions.memberLevel = JavadocMemberLevel.PROTECTED\r\n\t\toptions.author= true\r\n\t\toptions.windowTitle = \"${project.name}, ${version} - Java Documentation\"\r\n\t\toptions.header = \"${project.name} ${version}\"\r\n\t\toptions.overview=\"src/main/java/overview.html\"\r\n\t\toptions.setTags(tagList)\r\n\t}\r\n\r\n    jacocoTestReport {\r\n       getAdditionalSourceDirs().from(files(sourceSets.main.allSource.srcDirs))\r\n       getSourceDirectories().from(files(sourceSets.main.allSource.srcDirs))\r\n       getClassDirectories().from(files(sourceSets.main.output))\r\n       reports {\r\n           html.required = true\r\n\t\t   html.outputLocation = file(\"$buildDir/reports/jacoco/html\")\r\n\t\t   xml.required = false\r\n           csv.required = false\r\n        }\r\n    }\r\n\t\t\r\n\ttest {\r\n        ignoreFailures = true\r\n        \r\n        testLogging {\r\n            exceptionFormat = 'full'\r\n        }\r\n        \r\n        jacoco {\r\n            destinationFile = file(\"$buildDir/reports/jacoco/test.exec\")\r\n            reports {\r\n\t       \t\thtml.required = true\r\n           \t\thtml.outputLocation = file(\"$buildDir/reports/jacoco/html\")\r\n           \t}\r\n        }    \r\n    }\r\n\r\n\tgroup = 'at.co.sbs.gh.learning'\r\n}\r\n\r\ntask createDistDirectory() {\r\n\tdef distDir = file(\"${rootProject.projectDir}/distrib\")\r\n\tdistDir.mkdirs()\r\n}\r\n\r\ntask jacocoRootReport(type: JacocoReport) {\r\n    dependsOn = subprojects.test\r\n    getExecutionData().from(files(subprojects.jacocoTestReport.executionData))\r\n    getSourceDirectories().from(files(subprojects.sourceSets.main.allSource.srcDirs))\r\n    getClassDirectories().from(files(subprojects.sourceSets.main.output))\r\n    reports {\r\n    \thtml.outputLocation = file(\"jacoco\")\r\n        html.required = true\r\n        xml.required = true\r\n        csv.required = false\r\n    }\r\n    onlyIf = {\r\n        true\r\n    }\r\n    doFirst {\r\n        //noinspection GroovyAccessibility\r\n        executionData = files(executionData.findAll {\r\n            it.exists()\r\n        })\r\n    }    \r\n}\r\n\r\ndefaultTasks 'clean', 'build', 'javadoc'\r\n// 'publish'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/build.gradle	(date 1729282929249)
@@ -46,7 +46,7 @@
 
     java {
         toolchain {
-            languageVersion = JavaLanguageVersion.of(17)
+            languageVersion = JavaLanguageVersion.of(21)
         }
         withSourcesJar()
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectKey\">\r\n    <option name=\"state\" value=\"project://e2804f05-5315-4fc6-a121-c522a6c26470\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/.idea/misc.xml	(date 1729282954682)
@@ -7,7 +7,7 @@
   <component name="ProjectKey">
     <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/bin/sh\r\n\r\n#\r\n# Copyright © 2015-2021 the original authors.\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You may obtain a copy of the License at\r\n#\r\n#      https://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing, software\r\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for the specific language governing permissions and\r\n# limitations under the License.\r\n#\r\n\r\n##############################################################################\r\n#\r\n#   Gradle start up script for POSIX generated by Gradle.\r\n#\r\n#   Important for running:\r\n#\r\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\r\n#       noncompliant, but you have some other compliant shell such as ksh or\r\n#       bash, then to run this script, type that shell name before the whole\r\n#       command line, like:\r\n#\r\n#           ksh Gradle\r\n#\r\n#       Busybox and similar reduced shells will NOT work, because this script\r\n#       requires all of these POSIX shell features:\r\n#         * functions;\r\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\r\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\r\n#         * compound commands having a testable exit status, especially «case»;\r\n#         * various built-in commands including «command», «set», and «ulimit».\r\n#\r\n#   Important for patching:\r\n#\r\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\r\n#       by Bash, Ksh, etc; in particular arrays are avoided.\r\n#\r\n#       The \"traditional\" practice of packing multiple parameters into a\r\n#       space-separated string is a well documented source of bugs and security\r\n#       problems, so this is (mostly) avoided, by progressively accumulating\r\n#       options in \"$@\", and eventually passing that to Java.\r\n#\r\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\r\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\r\n#       see the in-line comments for details.\r\n#\r\n#       There are tweaks for specific operating systems such as AIX, CygWin,\r\n#       Darwin, MinGW, and NonStop.\r\n#\r\n#   (3) This script is generated from the Groovy template\r\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\r\n#       within the Gradle project.\r\n#\r\n#       You can find Gradle at https://github.com/gradle/gradle/.\r\n#\r\n##############################################################################\r\n\r\n# Attempt to set APP_HOME\r\n\r\n# Resolve links: $0 may be a link\r\napp_path=$0\r\n\r\n# Need this for daisy-chained symlinks.\r\nwhile\r\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\r\n    [ -h \"$app_path\" ]\r\ndo\r\n    ls=$( ls -ld \"$app_path\" )\r\n    link=${ls#*' -> '}\r\n    case $link in             #(\r\n      /*)   app_path=$link ;; #(\r\n      *)    app_path=$APP_HOME$link ;;\r\n    esac\r\ndone\r\n\r\n# This is normally unused\r\n# shellcheck disable=SC2034\r\nAPP_BASE_NAME=${0##*/}\r\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\r\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\r\n\r\n# Use the maximum available, or set MAX_FD != -1 to use that value.\r\nMAX_FD=maximum\r\n\r\nwarn () {\r\n    echo \"$*\"\r\n} >&2\r\n\r\ndie () {\r\n    echo\r\n    echo \"$*\"\r\n    echo\r\n    exit 1\r\n} >&2\r\n\r\n# OS specific support (must be 'true' or 'false').\r\ncygwin=false\r\nmsys=false\r\ndarwin=false\r\nnonstop=false\r\ncase \"$( uname )\" in                #(\r\n  CYGWIN* )         cygwin=true  ;; #(\r\n  Darwin* )         darwin=true  ;; #(\r\n  MSYS* | MINGW* )  msys=true    ;; #(\r\n  NONSTOP* )        nonstop=true ;;\r\nesac\r\n\r\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\r\n\r\n\r\n# Determine the Java command to use to start the JVM.\r\nif [ -n \"$JAVA_HOME\" ] ; then\r\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\r\n        # IBM's JDK on AIX uses strange locations for the executables\r\n        JAVACMD=$JAVA_HOME/jre/sh/java\r\n    else\r\n        JAVACMD=$JAVA_HOME/bin/java\r\n    fi\r\n    if [ ! -x \"$JAVACMD\" ] ; then\r\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\r\n\r\nPlease set the JAVA_HOME variable in your environment to match the\r\nlocation of your Java installation.\"\r\n    fi\r\nelse\r\n    JAVACMD=java\r\n    if ! command -v java >/dev/null 2>&1\r\n    then\r\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n\r\nPlease set the JAVA_HOME variable in your environment to match the\r\nlocation of your Java installation.\"\r\n    fi\r\nfi\r\n\r\n# Increase the maximum file descriptors if we can.\r\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\r\n    case $MAX_FD in #(\r\n      max*)\r\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\r\n        # shellcheck disable=SC3045\r\n        MAX_FD=$( ulimit -H -n ) ||\r\n            warn \"Could not query maximum file descriptor limit\"\r\n    esac\r\n    case $MAX_FD in  #(\r\n      '' | soft) :;; #(\r\n      *)\r\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\r\n        # shellcheck disable=SC3045\r\n        ulimit -n \"$MAX_FD\" ||\r\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\r\n    esac\r\nfi\r\n\r\n# Collect all arguments for the java command, stacking in reverse order:\r\n#   * args from the command line\r\n#   * the main class name\r\n#   * -classpath\r\n#   * -D...appname settings\r\n#   * --module-path (only if needed)\r\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\r\n\r\n# For Cygwin or MSYS, switch paths to Windows format before running java\r\nif \"$cygwin\" || \"$msys\" ; then\r\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\r\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\r\n\r\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\r\n\r\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\r\n    for arg do\r\n        if\r\n            case $arg in                                #(\r\n              -*)   false ;;                            # don't mess with options #(\r\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\r\n                    [ -e \"$t\" ] ;;                      #(\r\n              *)    false ;;\r\n            esac\r\n        then\r\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\r\n        fi\r\n        # Roll the args list around exactly as many times as the number of\r\n        # args, so each arg winds up back in the position where it started, but\r\n        # possibly modified.\r\n        #\r\n        # NB: a `for` loop captures its iteration list before it begins, so\r\n        # changing the positional parameters here affects neither the number of\r\n        # iterations, nor the values presented in `arg`.\r\n        shift                   # remove old arg\r\n        set -- \"$@\" \"$arg\"      # push replacement arg\r\n    done\r\nfi\r\n\r\n\r\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\r\n\r\n# Collect all arguments for the java command;\r\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\r\n#     shell script including quotes and variable substitutions, so put them in\r\n#     double quotes to make sure that they get re-expanded; and\r\n#   * put everything else in single quotes, so that it's not re-expanded.\r\n\r\nset -- \\\r\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\r\n        -classpath \"$CLASSPATH\" \\\r\n        org.gradle.wrapper.GradleWrapperMain \\\r\n        \"$@\"\r\n\r\n# Stop when \"xargs\" is not available.\r\nif ! command -v xargs >/dev/null 2>&1\r\nthen\r\n    die \"xargs is not available\"\r\nfi\r\n\r\n# Use \"xargs\" to parse quoted args.\r\n#\r\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\r\n#\r\n# In Bash we could simply go:\r\n#\r\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\r\n#   set -- \"${ARGS[@]}\" \"$@\"\r\n#\r\n# but POSIX shell has neither arrays nor command substitution, so instead we\r\n# post-process each arg (as a line of input to sed) to backslash-escape any\r\n# character that might be a shell metacharacter, then use eval to reverse\r\n# that process (while maintaining the separation between arguments), and wrap\r\n# the whole thing up as a single \"set\" statement.\r\n#\r\n# This will of course break if any of these variables contains a newline or\r\n# an unmatched quote.\r\n#\r\n\r\neval \"set -- $(\r\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\r\n        xargs -n1 |\r\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\r\n        tr '\\n' ' '\r\n    )\" '\"$@\"'\r\n\r\nexec \"$JAVACMD\" \"$@\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew b/gradlew
--- a/gradlew	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/gradlew	(date 1729282794009)
@@ -145,7 +145,7 @@
     case $MAX_FD in #(
       max*)
         # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
-        # shellcheck disable=SC3045
+        # shellcheck disable=SC2039,SC3045
         MAX_FD=$( ulimit -H -n ) ||
             warn "Could not query maximum file descriptor limit"
     esac
@@ -153,7 +153,7 @@
       '' | soft) :;; #(
       *)
         # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
-        # shellcheck disable=SC3045
+        # shellcheck disable=SC2039,SC3045
         ulimit -n "$MAX_FD" ||
             warn "Could not set maximum file descriptor limit to $MAX_FD"
     esac
@@ -202,11 +202,11 @@
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
 DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
-# Collect all arguments for the java command;
-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of
-#     shell script including quotes and variable substitutions, so put them in
-#     double quotes to make sure that they get re-expanded; and
-#   * put everything else in single quotes, so that it's not re-expanded.
+# Collect all arguments for the java command:
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
+#     and any embedded shellness will be escaped.
+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
+#     treated as '${Hostname}' itself on the command line.
 
 set -- \
         "-Dorg.gradle.appname=$APP_BASE_NAME" \
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew.bat b/gradlew.bat
--- a/gradlew.bat	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/gradlew.bat	(date 1729282794030)
@@ -43,11 +43,11 @@
 %JAVA_EXE% -version >NUL 2>&1
 if %ERRORLEVEL% equ 0 goto execute
 
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
+echo. 1>&2
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
 
 goto fail
 
@@ -57,11 +57,11 @@
 
 if exist "%JAVA_EXE%" goto execute
 
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
+echo. 1>&2
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
 
 goto fail
 
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"17\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/.idea/compiler.xml	(date 1729282954687)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="17" />
+    <bytecodeTargetLevel target="21" />
   </component>
 </project>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>distributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-8.7-bin.zip\r\nnetworkTimeout=10000\r\nvalidateDistributionUrl=true\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
--- a/gradle/wrapper/gradle-wrapper.properties	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1729282793974)
@@ -1,6 +1,6 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.10.2-bin.zip
 networkTimeout=10000
 validateDistributionUrl=true
 zipStoreBase=GRADLE_USER_HOME
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/json-test\" />\r\n            <option value=\"$PROJECT_DIR$/lambda-test\" />\r\n            <option value=\"$PROJECT_DIR$/license-test\" />\r\n            <option value=\"$PROJECT_DIR$/locale-test\" />\r\n            <option value=\"$PROJECT_DIR$/machine-learning\" />\r\n            <option value=\"$PROJECT_DIR$/password-container\" />\r\n            <option value=\"$PROJECT_DIR$/regex-test\" />\r\n            <option value=\"$PROJECT_DIR$/string-test\" />\r\n            <option value=\"$PROJECT_DIR$/switch-test\" />\r\n            <option value=\"$PROJECT_DIR$/threading-test\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 5d0d3772b1c9d7523f432ad27c3f1223a7157f0f)
+++ b/.idea/gradle.xml	(date 1729282517994)
@@ -6,6 +6,7 @@
       <GradleProjectSettings>
         <option name="testRunner" value="PLATFORM" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleJvm" value="21" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
